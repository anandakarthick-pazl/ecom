<?php\n/**\n * Tenant Data Diagnostic Script\n * Run with: php check_tenant_data.php\n */\n\nrequire_once __DIR__ . '/vendor/autoload.php';\n\nuse Illuminate\\Foundation\\Application;\nuse Illuminate\\Http\\Request;\n\n// Bootstrap Laravel application\n$app = require_once __DIR__ . '/bootstrap/app.php';\n\n// Create a kernel and handle a dummy request\n$kernel = $app->make(Illuminate\\Contracts\\Http\\Kernel::class);\n$response = $kernel->handle(\n    $request = Request::create('/test-data-check', 'GET')\n);\n\necho \"=== TENANT DATA DIAGNOSTIC ===\\n\\n\";\n\n// Check companies\necho \"1. COMPANIES IN DATABASE:\\n\";\ntry {\n    $companies = \\App\\Models\\SuperAdmin\\Company::all();\n    foreach ($companies as $company) {\n        echo \"   ID: {$company->id} | Name: {$company->name} | Domain: {$company->domain} | Status: {$company->status}\\n\";\n    }\necho \"\\n\";\n} catch (Exception $e) {\n    echo \"   ERROR: \" . $e->getMessage() . \"\\n\\n\";\n}\n\n// Check categories per company\necho \"2. CATEGORIES PER COMPANY:\\n\";\ntry {\n    $companies = \\App\\Models\\SuperAdmin\\Company::all();\n    foreach ($companies as $company) {\n        $categories = \\App\\Models\\Category::withoutGlobalScope('tenant')\n                                         ->where('company_id', $company->id)\n                                         ->get();\n        echo \"   {$company->name} ({$company->domain}): {$categories->count()} categories\\n\";\n        foreach ($categories as $category) {\n            echo \"     - {$category->name} (ID: {$category->id})\\n\";\n        }\n    }\n    echo \"\\n\";\n} catch (Exception $e) {\n    echo \"   ERROR: \" . $e->getMessage() . \"\\n\\n\";\n}\n\n// Check products per company\necho \"3. PRODUCTS PER COMPANY:\\n\";\ntry {\n    $companies = \\App\\Models\\SuperAdmin\\Company::all();\n    foreach ($companies as $company) {\n        $products = \\App\\Models\\Product::withoutGlobalScope('tenant')\n                                      ->where('company_id', $company->id)\n                                      ->get();\n        echo \"   {$company->name} ({$company->domain}): {$products->count()} products\\n\";\n        foreach ($products->take(3) as $product) {\n            echo \"     - {$product->name} (ID: {$product->id})\\n\";\n        }\n        if ($products->count() > 3) {\n            echo \"     ... and \" . ($products->count() - 3) . \" more\\n\";\n        }\n    }\n    echo \"\\n\";\n} catch (Exception $e) {\n    echo \"   ERROR: \" . $e->getMessage() . \"\\n\\n\";\n}\n\n// Check orders per company\necho \"4. ORDERS PER COMPANY:\\n\";\ntry {\n    $companies = \\App\\Models\\SuperAdmin\\Company::all();\n    foreach ($companies as $company) {\n        $orders = \\App\\Models\\Order::withoutGlobalScope('tenant')\n                                  ->where('company_id', $company->id)\n                                  ->get();\n        echo \"   {$company->name} ({$company->domain}): {$orders->count()} orders\\n\";\n        foreach ($orders->take(2) as $order) {\n            echo \"     - Order {$order->order_number} (Total: Rs. {$order->total})\\n\";\n        }\n        if ($orders->count() > 2) {\n            echo \"     ... and \" . ($orders->count() - 2) . \" more\\n\";\n        }\n    }\n    echo \"\\n\";\n} catch (Exception $e) {\n    echo \"   ERROR: \" . $e->getMessage() . \"\\n\\n\";\n}\n\n// Test tenant middleware simulation\necho \"5. TESTING TENANT DETECTION:\\n\";\ntry {\n    // Simulate greenvalleyherbs.local\n    echo \"   Testing greenvalleyherbs.local:\\n\";\n    $company1 = \\App\\Models\\SuperAdmin\\Company::where('domain', 'greenvalleyherbs.local')->first();\n    if ($company1) {\n        echo \"     ✅ Company found: {$company1->name}\\n\";\n        app()->instance('current_tenant', $company1);\n        $categories = \\App\\Models\\Category::all();\n        echo \"     ✅ Categories with tenant scope: {$categories->count()}\\n\";\n    } else {\n        echo \"     ❌ No company found for greenvalleyherbs.local\\n\";\n    }\n    \n    // Simulate organicnature.local\n    echo \"   Testing organicnature.local:\\n\";\n    $company2 = \\App\\Models\\SuperAdmin\\Company::where('domain', 'organicnature.local')->first();\n    if ($company2) {\n        echo \"     ✅ Company found: {$company2->name}\\n\";\n        app()->instance('current_tenant', $company2);\n        $categories = \\App\\Models\\Category::all();\n        echo \"     ✅ Categories with tenant scope: {$categories->count()}\\n\";\n    } else {\n        echo \"     ❌ No company found for organicnature.local\\n\";\n    }\n    echo \"\\n\";\n} catch (Exception $e) {\n    echo \"   ERROR: \" . $e->getMessage() . \"\\n\\n\";\n}\n\necho \"=== DIAGNOSTIC COMPLETE ===\\n\";\necho \"\\nIf you see mixed data or wrong company_id values,\\n\";\necho \"you may need to update the database to assign\\n\";\necho \"categories and products to the correct companies.\\n\";\n