@echo off
echo ========================================
echo COMMISSION STATUS MANAGEMENT SETUP
echo ========================================
echo.

echo 1. Clearing Laravel caches...
php artisan route:clear
php artisan view:clear
php artisan config:clear
php artisan cache:clear

echo.
echo 2. Generating autoloader files...
composer dump-autoload

echo.
echo 3. Checking commission system dependencies...
php artisan tinker --execute="echo class_exists('\\App\\Models\\Commission') ? 'Commission model: OK' : 'Commission model: MISSING';"
php artisan tinker --execute="echo class_exists('\\App\\Http\\Controllers\\Admin\\CommissionController') ? 'Commission controller: OK' : 'Commission controller: MISSING';"

echo.
echo ========================================
echo COMMISSION STATUS UPDATE METHODS AVAILABLE:
echo ========================================
echo.
echo üéØ METHOD 1: From POS Order Details
echo    ‚ñ∫ Navigate to: Admin ‚Üí POS ‚Üí Sales History
echo    ‚ñ∫ Click on any sale with commission
echo    ‚ñ∫ Scroll to "Commission Details" section
echo    ‚ñ∫ Use "Mark as Paid" or "Cancel" buttons
echo.
echo üéØ METHOD 2: Dedicated Commission Management Page
echo    ‚ñ∫ Navigate to: Admin ‚Üí Reports ‚Üí Sales Reports
echo    ‚ñ∫ Click "Manage Commissions" button
echo    ‚ñ∫ OR go directly to: /admin/commissions
echo.
echo üéØ METHOD 3: Bulk Operations
echo    ‚ñ∫ Use Commission Management page
echo    ‚ñ∫ Select multiple commissions
echo    ‚ñ∫ Click "Bulk Mark as Paid"
echo.
echo üéØ METHOD 4: API/Programmatic Updates
echo    ‚ñ∫ POST /admin/commissions/{id}/mark-paid
echo    ‚ñ∫ POST /admin/commissions/{id}/cancel
echo    ‚ñ∫ POST /admin/commissions/{id}/revert-pending
echo.
echo ========================================
echo COMMISSION STATUS WORKFLOW:
echo ========================================
echo.
echo üìä PENDING ‚Üí üí∞ PAID
echo    ‚ñ∫ Individual: Click "Mark as Paid" button
echo    ‚ñ∫ Bulk: Select multiple + "Bulk Mark as Paid"
echo    ‚ñ∫ Automatically records timestamp and user
echo.
echo üìä PENDING ‚Üí ‚ùå CANCELLED  
echo    ‚ñ∫ Click "Cancel" button
echo    ‚ñ∫ Provide cancellation reason (required)
echo    ‚ñ∫ Reason is logged in commission notes
echo.
echo üí∞ PAID ‚Üí üìä PENDING (Revert)
echo    ‚ñ∫ Click "Revert to Pending" button
echo    ‚ñ∫ Removes payment timestamp and user
echo    ‚ñ∫ Logs revert action in notes
echo.
echo ========================================
echo FEATURES AVAILABLE:
echo ========================================
echo.
echo ‚úÖ Individual Status Updates
echo    ‚ñ∫ Mark as Paid (with optional notes)
echo    ‚ñ∫ Cancel (with required reason)
echo    ‚ñ∫ Revert to Pending (paid ‚Üí pending)
echo.
echo ‚úÖ Bulk Operations
echo    ‚ñ∫ Select multiple pending commissions
echo    ‚ñ∫ Mark all as paid simultaneously
echo    ‚ñ∫ Add bulk payment notes
echo.
echo ‚úÖ Advanced Filtering
echo    ‚ñ∫ Filter by status (pending/paid/cancelled)
echo    ‚ñ∫ Filter by reference name
echo    ‚ñ∫ Filter by date range
echo.
echo ‚úÖ Detailed Commission View
echo    ‚ñ∫ Modal popup with full commission details
echo    ‚ñ∫ Related sale information
echo    ‚ñ∫ Complete notes history
echo    ‚ñ∫ Direct links to sale details
echo.
echo ‚úÖ Audit Trail
echo    ‚ñ∫ All status changes are logged
echo    ‚ñ∫ Timestamps for all actions
echo    ‚ñ∫ User tracking for payments
echo    ‚ñ∫ Detailed notes for each action
echo.
echo ‚úÖ Export Capabilities
echo    ‚ñ∫ Export filtered commission data
echo    ‚ñ∫ Excel export with all details
echo    ‚ñ∫ Date range and status filtering
echo.
echo ========================================
echo TESTING CHECKLIST:
echo ========================================
echo.
echo ‚ñ° 1. Create a POS sale with commission enabled
echo ‚ñ° 2. Navigate to /admin/commissions
echo ‚ñ° 3. Verify commission appears in pending status
echo ‚ñ° 4. Test "Mark as Paid" individual action
echo ‚ñ° 5. Test "Revert to Pending" action
echo ‚ñ° 6. Test "Cancel" action with reason
echo ‚ñ° 7. Test bulk selection and bulk payment
echo ‚ñ° 8. Test commission filtering options
echo ‚ñ° 9. Test commission details modal
echo ‚ñ° 10. Test export functionality
echo.
echo ========================================
echo ACCESS URLS:
echo ========================================
echo.
echo üåê Commission Management:
echo    http://greenvalleyherbs.local:8000/admin/commissions
echo.
echo üåê Sales Reports (with commission data):
echo    http://greenvalleyherbs.local:8000/admin/reports/sales
echo.
echo üåê POS Sales (individual commission management):
echo    http://greenvalleyherbs.local:8000/admin/pos/sales
echo.
echo ========================================
echo TROUBLESHOOTING:
echo ========================================
echo.
echo ‚ùå Commission page not accessible:
echo    ‚ñ∫ Check user permissions for commission management
echo    ‚ñ∫ Verify routes are properly cached
echo    ‚ñ∫ Check Laravel logs in storage/logs/
echo.
echo ‚ùå Status update buttons not working:
echo    ‚ñ∫ Check browser console for JavaScript errors
echo    ‚ñ∫ Verify CSRF token is valid
echo    ‚ñ∫ Check network tab for failed requests
echo.
echo ‚ùå Bulk operations failing:
echo    ‚ñ∫ Ensure at least one commission is selected
echo    ‚ñ∫ Check that selected commissions are in pending status
echo    ‚ñ∫ Verify bulk-mark-paid route is working
echo.
echo ‚ùå Modal not loading details:
echo    ‚ñ∫ Check commission details route
echo    ‚ñ∫ Verify commission relationships are loaded
echo    ‚ñ∫ Check for JavaScript errors in console
echo.
echo Setup complete! Commission status management is now fully functional.
echo.
pause
